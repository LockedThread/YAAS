/*
 * Copyright (C) 2023 Prof. Dr. David Buzatto
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */
package br.com.davidbuzatto.yaas.gui.fa.properties;

import br.com.davidbuzatto.yaas.gui.DrawPanel;
import br.com.davidbuzatto.yaas.gui.fa.FA;
import br.com.davidbuzatto.yaas.gui.fa.FAState;
import java.awt.Color;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;

/**
 * FAState properties edit/visualization panel.
 * 
 * @author Prof. Dr. David Buzatto
 */
public class FAStatePropertiesPanel extends javax.swing.JPanel {

    private DrawPanel drawPanel;
    
    private FA fa;
    private FAState state;
    
    /**
     * Creates new form StatePropertiesPanel
     */
    public FAStatePropertiesPanel( DrawPanel drawPanel ) {
        
        this.drawPanel = drawPanel;
        
        initComponents();
        customInit();
        
    }
    
    private void customInit() {
    }

    public void setFa( FA fa ) {
        this.fa = fa;
    }

    public void setState( FAState state ) {
        this.state = state;
    }
    
    public void readProperties() {
        
        if ( state != null ) {
            
            txtLabel.setText( state.getLabel() );
            txtCustomLabel.setText( state.getCustomLabel() );
            checkInitial.setSelected( state.isInitial() );
            checkAccepting.setSelected( state.isAccepting() );
            btnColor.setForeground( state.getStrokeColor() );
            
        } else {
            
            txtLabel.setText( "" );
            txtCustomLabel.setText( "" );
            checkInitial.setSelected( false );
            checkAccepting.setSelected( false );
            btnColor.setForeground( Color.BLACK );
            
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelProperties = new javax.swing.JPanel();
        lblLabel = new javax.swing.JLabel();
        lblCustomLabel = new javax.swing.JLabel();
        lblInitial = new javax.swing.JLabel();
        lblAccepting = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        txtLabel = new javax.swing.JTextField();
        txtCustomLabel = new javax.swing.JTextField();
        checkInitial = new javax.swing.JCheckBox();
        checkAccepting = new javax.swing.JCheckBox();
        btnColor = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();

        lblLabel.setText("Label:");

        lblCustomLabel.setText("Custom Label:");

        lblInitial.setText("Initial:");

        lblAccepting.setText("Accepting");

        lblColor.setText("Color:");

        txtLabel.setText("a");
        txtLabel.setEnabled(false);

        txtCustomLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustomLabelActionPerformed(evt);
            }
        });

        checkInitial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkInitialActionPerformed(evt);
            }
        });

        checkAccepting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkAcceptingActionPerformed(evt);
            }
        });

        btnColor.setForeground(new java.awt.Color(0, 0, 0));
        btnColor.setText("\u25fc");
        btnColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPropertiesLayout = new javax.swing.GroupLayout(panelProperties);
        panelProperties.setLayout(panelPropertiesLayout);
        panelPropertiesLayout.setHorizontalGroup(
            panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblCustomLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblInitial, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblAccepting, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblColor, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPropertiesLayout.createSequentialGroup()
                        .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkInitial)
                            .addComponent(btnColor)
                            .addComponent(checkAccepting))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtLabel)
                    .addComponent(txtCustomLabel))
                .addContainerGap())
        );
        panelPropertiesLayout.setVerticalGroup(
            panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPropertiesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLabel)
                    .addComponent(txtLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomLabel)
                    .addComponent(txtCustomLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInitial)
                    .addComponent(checkInitial))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAccepting)
                    .addComponent(checkAccepting))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblColor)
                    .addComponent(btnColor))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/delete.png"))); // NOI18N
        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRemove)
                        .addGap(0, 101, Short.MAX_VALUE))
                    .addComponent(panelProperties, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelProperties, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemove)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void checkInitialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkInitialActionPerformed
        
        if ( checkInitial.isSelected() ) {
            state.setInitial( true );
            fa.setInitialState( state );
        } else {
            if ( state.isInitial() ) {
                fa.setInitialState( null );
            }
            state.setInitial( false );
        }
        
        drawPanel.repaint();
        
    }//GEN-LAST:event_checkInitialActionPerformed

    private void checkAcceptingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkAcceptingActionPerformed
        state.setAccepting( checkAccepting.isSelected() );
        drawPanel.repaint();
    }//GEN-LAST:event_checkAcceptingActionPerformed

    private void btnColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorActionPerformed
        
        Color c = JColorChooser.showDialog( this, "State Color", btnColor.getForeground() );
        
        if ( c != null ) {
            btnColor.setForeground( c );
            state.setStrokeColor( c );
            drawPanel.repaint();
        }
        
    }//GEN-LAST:event_btnColorActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        
        if ( state != null ) {
        
            if ( JOptionPane.showConfirmDialog( 
                    this, 
                    "Do you really want to remove the selected state?" , 
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION ) == JOptionPane.YES_OPTION ) {
                fa.removeState( state );
                drawPanel.repaint();
                state = null;
                readProperties();
            }
        
        } else {
            
            JOptionPane.showMessageDialog( this,
                    "There's no selected state!",
                    "ERROR",
                    JOptionPane.ERROR_MESSAGE );
            
        }
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void txtCustomLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustomLabelActionPerformed
        state.setCustomLabel( txtCustomLabel.getText() );
        drawPanel.repaint();
    }//GEN-LAST:event_txtCustomLabelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnColor;
    private javax.swing.JButton btnRemove;
    private javax.swing.JCheckBox checkAccepting;
    private javax.swing.JCheckBox checkInitial;
    private javax.swing.JLabel lblAccepting;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblCustomLabel;
    private javax.swing.JLabel lblInitial;
    private javax.swing.JLabel lblLabel;
    private javax.swing.JPanel panelProperties;
    private javax.swing.JTextField txtCustomLabel;
    private javax.swing.JTextField txtLabel;
    // End of variables declaration//GEN-END:variables
}
